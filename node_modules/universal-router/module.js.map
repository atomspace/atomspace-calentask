{"version":3,"file":"module.js","sources":["src/matchPath.js","src/matchRoute.js","src/resolveRoute.js","src/UniversalRouter.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\n\nconst { hasOwnProperty } = Object.prototype\nconst cache = new Map()\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val)\n  } catch (err) {\n    return val\n  }\n}\n\nfunction matchPath(route, pathname, parentKeys, parentParams) {\n  const end = !route.children\n  const cacheKey = `${route.path || ''}|${end}`\n  let regexp = cache.get(cacheKey)\n\n  if (!regexp) {\n    const keys = []\n    regexp = {\n      keys,\n      pattern: pathToRegexp(route.path || '', keys, { end }),\n    }\n    cache.set(cacheKey, regexp)\n  }\n\n  const m = regexp.pattern.exec(pathname)\n  if (!m) {\n    return null\n  }\n\n  const path = m[0]\n  const params = Object.assign({}, parentParams)\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1]\n    const prop = key.name\n    const value = m[i]\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : []\n      } else {\n        params[prop] = value ? decodeParam(value) : value\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params,\n  }\n}\n\nexport default matchPath\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath'\n\nfunction matchRoute(route, baseUrl, pathname, parentKeys, parentParams) {\n  let match\n  let childMatches\n  let childIndex = 0\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return { done: true }\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams)\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          }\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const childRoute = route.children[childIndex]\n            childRoute.parent = route\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + match.path,\n              pathname.substr(match.path.length),\n              match.keys,\n              match.params,\n            )\n          }\n\n          const childMatch = childMatches.next(routeToSkip)\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            }\n          }\n\n          childMatches = null\n          childIndex++\n        }\n      }\n\n      return { done: true }\n    },\n  }\n}\n\nexport default matchRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params)\n  }\n  return undefined\n}\n\nexport default resolveRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\nimport matchRoute from './matchRoute'\nimport resolveRoute from './resolveRoute'\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute\n  while (route) {\n    route = route.parent\n    if (route === parentRoute) {\n      return true\n    }\n  }\n  return false\n}\n\nclass UniversalRouter {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes')\n    }\n\n    this.baseUrl = options.baseUrl || ''\n    this.errorHandler = options.errorHandler\n    this.resolveRoute = options.resolveRoute || resolveRoute\n    this.context = Object.assign({ router: this }, options.context)\n    this.root = Array.isArray(routes) ? { path: '', children: routes, parent: null } : routes\n    this.root.parent = null\n  }\n\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      typeof pathnameOrContext === 'string' ? { pathname: pathnameOrContext } : pathnameOrContext,\n    )\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    )\n    const resolve = this.resolveRoute\n    let matches = null\n    let nextMatches = null\n    let currentContext = context\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route\n      matches = nextMatches || match.next(routeToSkip)\n      nextMatches = null\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches\n          return Promise.resolve(null)\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Page not found')\n        error.context = context\n        error.code = 404\n        return Promise.reject(error)\n      }\n\n      currentContext = Object.assign({}, context, matches.value)\n\n      return Promise.resolve(resolve(currentContext, matches.value.params)).then((result) => {\n        if (result !== null && result !== undefined) {\n          return result\n        }\n        return next(resume, parent, result)\n      })\n    }\n\n    context.next = next\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        error.context = error.context || currentContext\n        error.code = error.code || 500\n        if (this.errorHandler) {\n          return this.errorHandler(error)\n        }\n        throw error\n      })\n  }\n}\n\nUniversalRouter.pathToRegexp = pathToRegexp\n\nexport default UniversalRouter\n"],"names":["hasOwnProperty","Object","prototype","cache","Map","decodeParam","val","decodeURIComponent","err","matchPath","route","pathname","parentKeys","parentParams","end","children","cacheKey","path","regexp","get","keys","pathToRegexp","set","m","pattern","exec","params","assign","i","length","key","prop","name","value","undefined","call","repeat","split","delimiter","map","charAt","substr","concat","matchRoute","baseUrl","match","childMatches","childIndex","routeToSkip","childRoute","parent","childMatch","next","done","resolveRoute","context","action","isChildRoute","parentRoute","UniversalRouter","routes","options","TypeError","errorHandler","root","Array","isArray","resolve","pathnameOrContext","matches","nextMatches","currentContext","resume","prevResult","Promise","error","Error","code","reject","then","result","catch"],"mappings":"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"}